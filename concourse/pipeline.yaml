resource_types:
- name: slack-alert
  source:
    repository: arbourd/concourse-slack-alert-resource
  type: docker-image

resources:
- name: image-tf-code-analyzers-python-image
  source:
    email: ((auth-harbor-production-rw.email))
    password: ((auth-harbor-production-rw.password))
    repository: ((auth-harbor-production-rw.prefix))((auth-harbor-production-rw.project))/tf-code-analyzers-python
    tag: latest
    username: ((auth-harbor-production-rw.username))
    insecure_registries: ["harbor.wkng.net"]
  type: docker-image
- name: image-tf-code-analyzers-python-sources
  source:
    branch: main
    skip_ssl_verification: true
    uri: https://github.com/wellingtonking/docker-image-tf-code-analyzers-python.git
  type: git
- name: python-3-slim-image
  source:
    repository: registry.hub.docker.com/library/python
    tag: "3-slim"
  type: docker-image
- name: alpine-3.18-image
  source:
    repository: registry.hub.docker.com/library/alpine
    tag: "3.18"
  type: docker-image
- name: slack-notify
  source:
    url: ((auth-slack-wo.hook_url))
  type: slack-alert


jobs:
- name: self-update-pipeline
  serial: true
  plan:
  - get: image-tf-code-analyzers-python-sources
    trigger: true
  - set_pipeline: self
    file: image-tf-code-analyzers-python-sources/concourse/pipeline.yaml

- name: build-and-push
  on_abort:
    params:
      alert_type: aborted
    put: slack-notify
  on_error:
    params:
      alert_type: errored
    put: slack-notify
  on_failure:
    params:
      alert_type: failed
    put: slack-notify
  on_success:
    params:
      alert_type: success
    put: slack-notify
  plan:
  - get: image-tf-code-analyzers-python-sources
    trigger: true
  - get: alpine-3.18-image
    trigger: true
  - get: python-3-slim-image
    trigger: true
  - params:
      additional_tags: image-tf-code-analyzers-python-sources/docker/additional_tags
      build: image-tf-code-analyzers-python-sources
      build_args_file: image-tf-code-analyzers-python-sources/docker/metadata.json
      dockerfile: image-tf-code-analyzers-python-sources/Dockerfile.alpine
    put: image-tf-code-analyzers-python-image
  public: true
  serial: true

- name: container-image-scan
  on_abort:
    params:
      alert_type: aborted
    put: slack-notify
  on_error:
    params:
      alert_type: errored
      text: Errored the security scan the image _tf-code-analyzers-python_.
    put: slack-notify
  on_failure:
    do:
    - params:
        alert_type: failed
        text: Failed the security scan of the image _tf-code-analyzers-python_.
      put: slack-notify

  plan:

  - get: image-tf-code-analyzers-python-image
    trigger: true
    passed:
    - build-and-push

  - task: trivy-scan-image
    params:
      TRIVY_USERNAME: '((auth-harbor-production-rw.username))'
      TRIVY_PASSWORD: '((auth-harbor-production-rw.password))'
    config:
      image_resource:
        name: ""
        source:
          repository: wkng/trivy-utils
          tag: v1.0.0
        type: registry-image
      platform: linux
      run:
        args:
        - -exc
        - |
          set -euxo pipefail
          BASEPATH=$(pwd)
          export TRIVY_INSECURE="true"
          export TRIVY_NON_SSL="false"
          echo "Scanning: ((auth-harbor-production-rw.prefix))((auth-harbor-production-rw.project))/tf-code-analyzers-python:latest"
          # Tag "latest" is temporary wip
          trivy image ((auth-harbor-production-rw.prefix))((auth-harbor-production-rw.project))/tf-code-analyzers-python:latest
        path: /bin/bash
    
  # - task: dockle-scan-image
  #   config:
  #     image_resource:
  #       name: ""
  #       source:
  #         repository: wkng/dockle-utils
  #       type: registry-image
  #     inputs:
  #     - name: version-tag
  #     platform: linux
  #     run:
  #       args:
  #       - ((auth-dockerhub-cdemers-rw.repository))/translator-broker:((.:version))
  #       path: dockle-defaults.sh
    
  public: true
